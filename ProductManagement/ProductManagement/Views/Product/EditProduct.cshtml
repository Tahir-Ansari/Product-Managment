@model ProductManagement.Models.Product

@{
    ViewBag.Title = "Edit Product";
}

<style>
    p {
        font-size: 30px;
        color: black;
    }
</style>

@using (Html.BeginForm("EditProduct", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 20px; color: black; font-weight: bold;">
                    Product Name
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="typeValue">
                <div class="col-md-4" style="padding-top: 5px; color: black; font-weight: bold;">
                    Type<br />
                    @Html.RadioButtonFor(model => model.Type, ProductManagement.Models.Type.Physical, new { @id = ProductManagement.Models.Type.Physical })
                    @Html.Label(ProductManagement.Models.Type.Physical.ToString())
                    @Html.RadioButtonFor(model => model.Type, ProductManagement.Models.Type.Virtual, new { @id = ProductManagement.Models.Type.Virtual })
                    @Html.Label(ProductManagement.Models.Type.Virtual.ToString())
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 20px; color: black; font-weight: bold;">
                    Description
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4", cols = "2" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="weight">
                <div class="col-md-4" style="padding-top: 10px; color: black; font-weight: bold;">
                    Weight (in Kg)
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 25px; color: black; font-weight: bold;">
                    SKU
                    @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="lenght">
                <div class="col-md-4" style="color: black; font-weight: bold;">
                    Length (in Cm)
                    @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 20px; color: black; font-weight: bold;">
                    Selling Price
                    @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="width">
                <div class="col-md-4" style="color: black; font-weight: bold;">
                    Width (in Cm)
                    @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 20px; color: black; font-weight: bold;">
                    Available Quantity
                    @Html.EditorFor(model => model.AvailableQuantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AvailableQuantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none" id="height">
                <div class="col-md-4" style="color: black; font-weight: bold;">
                    Height (in Cm)
                    @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-4" style="padding-top: 20px; color: black; font-weight: bold;">
                    Category
                    @Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-pull-2" style="padding-top: 20px;">
                <input type="submit" value="Save" class="btn btn-danger" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            if('@Model.Type' == 'Virtual') {
                    $("#lenght").hide();
                    $("#width").hide();
                    $("#height").hide();
                    $("#weight").hide();
                }
            else if ('@Model.Type' == 'Physical') {
                    $("#lenght").show();
                    $("#width").show();
                    $("#height").show();
                    $("#weight").show();
            }


            $('input[type=radio][name=Type]').change(function () {
                if (this.value == 'Virtual') {
                    $("#lenght").hide();
                    $("#width").hide();
                    $("#height").hide();
                    $("#weight").hide();
                }
                else if (this.value == 'Physical') {
                    $("#lenght").show();
                    $("#width").show();
                    $("#height").show();
                    $("#weight").show();
                }
            });
        })
    </script>
}